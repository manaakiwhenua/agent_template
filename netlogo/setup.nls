to setup
  ;; initialise the world, patches and agents
  __clear-all-and-reset-ticks
  ;; select random seed
  (ifelse fixed-seed
      [set this-random-seed seed]
      [set this-random-seed new-seed])
  random-seed this-random-seed
  ;; control how long model goes for
  set stop-after-year years-to-run-before-stopping
  ;; initialise default land use data (could reimplement using the built-in
  ;; table extension).  Changing the size and ordering of this list is
  ;; now hard because of assumed indexing elsewhere in the code. One
  ;; good reason to use a table?
  set-landuse-parameters
  ;; setup world size
  setup-world
  setup-patches
  setup-landuse-networks
  setup-farmers
  update-derived-model-quantities
  update-display
  set _first-go true
end

to set-landuse-parameters
  ;; Initialise or re-initialise and the landuse parameters from the
  ;; source specified by landuse-parameter-source
  ;; 
  ;; initialise landuse parameters from the default preset value.  Do
  ;; this first so that the lists exist and are of the right size.
  ;; This is the DEFINING land parameter data structure. Other source
  ;; only need change what is different to the default.
  set-landuse-parameters-from-preset-default
  ;; set from a preset
  if (landuse-parameter-source = "preset: default")  [set-landuse-parameters-from-preset-default]
  if (landuse-parameter-source = "preset: forest")  [set-landuse-parameters-from-preset-forest]
  ;; load csv landuse parameters into landuse arrays
  if (landuse-parameter-source = "csv file")  [set-landuse-parameters-from-csv]
  ;; set landuse arrays from whatever is in the manual entry boxes
  if (landuse-parameter-source = "manual entry") [set-landuse-parameters-from-manual-entry]
  ;; set manual entry boxes to match whatever is now in the arrays
  set-manual-entry-from-landuse-parameters
end

to setup-world
  ;; load raster file if necessary to set world size to match
  if (initial-landuse-source = "gis-raster") [
    set gis-raster-data gis:load-dataset gis-raster-filename
    set world-size (max (list gis:width-of gis-raster-data gis:height-of gis-raster-data))]
  ;; setup the grid
  resize-world 0 ( world-size - 1 ) 0 ( world-size - 1 )
  set-patch-size 6 * 100 / world-size
end

to setup-patches                                                                            ;; setup the LU within the landscape
  ;; set initial land use
  (ifelse
    (initial-landuse-source = "random") [initialise-landuse-to-random-and-correlated]
    (initial-landuse-source = "gis-vector") [initialise-landuse-to-gis-vector-layer]
    (initial-landuse-source = "gis-raster") [initialise-landuse-to-gis-raster-layer]
    ;; if initialise-landuse-source is an integer, set all land use to this
    [ask patches [set LU initial-landuse-source]])
  ;; idenfity patches that have land use data and should have a farmer
  set valid-patches (patches with [LU != 0])
  set invalid-patches (patches with [LU = 0])
  ;; create one farmer per patch
  ask valid-patches [sprout-farmers 1 [set shape "person" set size 0.5 set color black]]
  ;; set landuse data for each patch
  ask valid-patches [set-patch-landuse-data]
end

to initialise-landuse-to-random-and-correlated
  ;; loop through patches assigning landuse, stepping by correlated width
  foreach (range 0 world-width landuse-correlated-range) [ x ->
    foreach (range 0 world-height landuse-correlated-range) [ y ->
      ;; choose a random land use respecting weights
      let this-LU (rnd:weighted-one-of-list 
                    landuse-code 
                    [this-this-LU -> item this-this-LU landuse-weight])
      ;; set patches in this correlated square
      ask patches with [(pxcor >= x) and (pxcor < x + landuse-correlated-range)
                      and (pycor >= y) and (pycor < y + landuse-correlated-range)]
                [set LU this-LU]]]
end

to initialise-landuse-to-gis-vector-layer
  ;; load vector layer
  set gis-vector-data gis:load-dataset gis-vector-filename
  ;; link to world
  gis:set-world-envelope (gis:envelope-of gis-vector-data)
  ;; default land use to missing
  ask patches [ set LU 0 ]     
  ;; landuse from gis-vector
  foreach gis:feature-list-of gis-vector-data [ feature ->
    ask patches gis:intersecting feature [
      set LU gis:property-value feature "LANDUSE"]]
end

to initialise-landuse-to-gis-raster-layer
  ;; load raster layer
  set gis-raster-data gis:load-dataset gis-raster-filename
  ;; link to world
  gis:set-world-envelope (gis:envelope-of gis-raster-data)
  ;; set patch land use
  ask patches [
    ;; set to raster value
    set LU ( gis:raster-sample gis-raster-data self )
    ;; default to missing LU category, this test is used to identify
    ;; NaN values input by gis:raster-sample when a patch is outside
    ;; its spatial range
    if (not  ((LU <= 0) or (LU >= 0))) [ set LU 0 ]
]
end

to setup-farmers
  ask farmers [
    ;; weighted random select of behaviour, and associated color
    let pairs (list (list  1 BAU-weight ) (list 2 industry-weight ) (list 3 CC-weight) )
    set behaviour  (first (rnd:weighted-one-of-list pairs [ [p] -> last p ]))
    set color (item (behaviour - 1) (list blue black green))
    ;; Set the initial landuse-age to a random value up to
    ;; decision-interval.
    ask patch-here [ set landuse-age ( (random decision-interval)) ]
    ;; create invisible links between neighbouring farmers, the distance rules
    ;; prevent linking to self, and keeping links only to neighbours
    ;; within maximum-neighbour-distance, the small shifts are for
    ;; fear of floating-point errors.
    create-neighbour-links-with farmers with [((distance myself) < (maximum-neighbour-distance + 0.001)) and ((distance myself) > 0.001)] [hide-link]]
end

to setup-landuse-networks
  ;; create landuse networks
  ;; create networks
  create-landuse-networks number-of-landuse-networks [hide-turtle]
  ;; create network links to farmers
  ask farmers [
    create-landuse-network-link-with one-of landuse-networks [hide-link]]
  ;; set networks to have incremental colours
  let this-color 5
  ask landuse-networks [
    set network-color this-color
    set this-color (this-color + 10)
  ]
end

to set-landuse-parameters-from-csv
  ;; Read land use data from a correctly formatted CSV file. Must be
  ;; of the correct shape, size, and key ordering to match the
  ;; existing landuse data. NO CHECKS ARE MADE!!!
  ;;
  ;; open file, read line by line, trimming whitespace and quotes
  file-open landuse-data-csv-filename
  while [ not file-at-end? ] [
    let elements (map
        [element -> (trim-whitespace-and-quotes element)]
        (csv:from-row file-read-line) )
    ;; if statement to skip commented lines
    if (not ((first (first elements)) = "#")) [
      ;; set landuse data casting strings to numeric data
      ;; automatically and WITHOUT CHECKS!
      let this-landuse-code (read-from-string item 0 elements)
      let index this-landuse-code
      let this-column 1
      set landuse-name (replace-item index landuse-name (item this-column elements))
      set this-column (this-column + 1)
      set landuse-color (replace-item index landuse-color (read-from-string (item this-column elements)))
      set this-column (this-column + 1)
      set landuse-product-yield (replace-item index landuse-product-yield (read-from-string (item this-column elements)))
      set this-column (this-column + 1)
      set landuse-product-value (replace-item index landuse-product-value (read-from-string (item this-column elements)))
      set this-column (this-column + 1)
      set landuse-emissions (replace-item index landuse-emissions (read-from-string (item this-column elements)))
      set this-column (this-column + 1)
      set landuse-carbon-stock-rate (replace-item index landuse-carbon-stock-rate (read-from-string (item this-column elements)))
      set this-column (this-column + 1)
      set landuse-carbon-stock-maximum (replace-item index landuse-carbon-stock-maximum (read-from-string (item this-column elements)))
      set this-column (this-column + 1)
      set landuse-weight (replace-item index landuse-weight (read-from-string (item this-column elements)))
      set this-column (this-column + 1)
    ]]
    file-close
end

to set-landuse-parameters-from-preset-default
  ;; Set land use parameters (could reimplement using the built-in
  ;; table extension).  Changing the size and ordering of this list is
  ;; now hard because of assumed indexing elsewhere in the code. This
  ;; data Is used as a default elsewhere in the code even if the
  ;; default preset is not selected.
  set landuse-code                     [0         1            2       3             4                5       6                   7                   8               9               ]
  set landuse-name                     ["missing" "artificial" "water" "crop annual" "crop perennial" "scrub" "intensive pasture" "extensive pasture" "native forest" "exotic forest" ]
  set landuse-color                    [0         8            87      45            125              26      65                  56                  73              63              ]
  set landuse-product-yield            [0         1            0       10            20               0       1.1                 0.3                 0               1               ]
  set landuse-product-value            [0         300000       0       450           3500             0       10000               5500                0               4500            ]
  set landuse-year-of-first-product    ["none"    1            "none"  1             1                1       1                   1                   1               1               ]
  set landuse-year-of-last-product     ["none"    1            "none"  "none"        "none"           "none"  "none"              "none"              "none"          "none"          ]
  set landuse-product-type             [0         0            0       1             1                0       2                   2                   0               0               ]
  set landuse-emissions                [0         0            0       95            90               0       480                 150                 0               0               ]
  set landuse-carbon-stock-rate        [0         0            0       0             0                3.5     0                   0                   8               25              ]
  set landuse-carbon-stock-maximum     [0         0            0       0             0                100     0                   0                   250             700             ]
  set landuse-weight                   [0         3            5       10            10               6       18                  23                  5               20              ]
end

to set-landuse-parameters-from-preset-forest
  ;; Set an non-default landuse parameters preset. It is only
  ;; necessary to set what to set what is different from the default
  ;; preset.
  set landuse-weight                   [0         0            0       0             0                0       0                   0                   50              50              ]
end

to set-manual-entry-from-landuse-parameters
  ;; set manual entry boxes to match whatever is in the landuse data lists
  ;; 
  set artificial-weight                      (item 1 landuse-weight)
  set water-weight                           (item 2 landuse-weight)
  set crop-annual-weight                     (item 3 landuse-weight)
  set crop-perennial-weight                  (item 4 landuse-weight)
  set scrub-weight                           (item 5 landuse-weight)
  set intensive-pasture-weight               (item 6 landuse-weight)
  set extensive-pasture-weight               (item 7 landuse-weight)
  set native-forest-weight                   (item 8 landuse-weight)
  set exotic-forest-weight                   (item 9 landuse-weight)
  ;; 
  set artificial-product-yield               (item 1 landuse-product-yield)
  set water-product-yield                    (item 2 landuse-product-yield)
  set crop-annual-product-yield              (item 3 landuse-product-yield)
  set crop-perennial-product-yield           (item 4 landuse-product-yield)
  set scrub-product-yield                    (item 5 landuse-product-yield)
  set intensive-pasture-product-yield        (item 6 landuse-product-yield)
  set extensive-pasture-product-yield        (item 7 landuse-product-yield)
  set native-forest-product-yield            (item 8 landuse-product-yield)
  set exotic-forest-product-yield            (item 9 landuse-product-yield)
  ;; 
  set artificial-product-value               (item 1 landuse-product-value)
  set water-product-value                    (item 2 landuse-product-value)
  set crop-annual-product-value              (item 3 landuse-product-value)
  set crop-perennial-product-value           (item 4 landuse-product-value)
  set scrub-product-value                    (item 5 landuse-product-value)
  set intensive-pasture-product-value        (item 6 landuse-product-value)
  set extensive-pasture-product-value        (item 7 landuse-product-value)
  set native-forest-product-value            (item 8 landuse-product-value)
  set exotic-forest-product-value            (item 9 landuse-product-value)
  ;; 
  set artificial-emissions                   (item 1 landuse-emissions)
  set water-emissions                        (item 2 landuse-emissions)
  set crop-annual-emissions                  (item 3 landuse-emissions)
  set crop-perennial-emissions               (item 4 landuse-emissions)
  set scrub-emissions                        (item 5 landuse-emissions)
  set intensive-pasture-emissions            (item 6 landuse-emissions)
  set extensive-pasture-emissions            (item 7 landuse-emissions)
  set native-forest-emissions                (item 8 landuse-emissions)
  set exotic-forest-emissions                (item 9 landuse-emissions)
  ;; 
  set artificial-carbon-stock-rate           (item 1 landuse-carbon-stock-rate)
  set water-carbon-stock-rate                (item 2 landuse-carbon-stock-rate)
  set crop-annual-carbon-stock-rate          (item 3 landuse-carbon-stock-rate)
  set crop-perennial-carbon-stock-rate       (item 4 landuse-carbon-stock-rate)
  set scrub-carbon-stock-rate                (item 5 landuse-carbon-stock-rate)
  set intensive-pasture-carbon-stock-rate    (item 6 landuse-carbon-stock-rate)
  set extensive-pasture-carbon-stock-rate    (item 7 landuse-carbon-stock-rate)
  set native-forest-carbon-stock-rate        (item 8 landuse-carbon-stock-rate)
  set exotic-forest-carbon-stock-rate        (item 9 landuse-carbon-stock-rate)
  ;; 
  set artificial-carbon-stock-maximum        (item 1 landuse-carbon-stock-maximum)
  set water-carbon-stock-maximum             (item 2 landuse-carbon-stock-maximum)
  set crop-annual-carbon-stock-maximum       (item 3 landuse-carbon-stock-maximum)
  set crop-perennial-carbon-stock-maximum    (item 4 landuse-carbon-stock-maximum)
  set scrub-carbon-stock-maximum             (item 5 landuse-carbon-stock-maximum)
  set intensive-pasture-carbon-stock-maximum (item 6 landuse-carbon-stock-maximum)
  set extensive-pasture-carbon-stock-maximum (item 7 landuse-carbon-stock-maximum)
  set native-forest-carbon-stock-maximum     (item 8 landuse-carbon-stock-maximum)
  set exotic-forest-carbon-stock-maximum     (item 9 landuse-carbon-stock-maximum)
end

to set-landuse-parameters-from-manual-entry
  ;; set landuse parameters from the values in the manual entry boxes
  ;;
  set landuse-weight               (replace-item 1 landuse-weight               artificial-weight)
  set landuse-weight               (replace-item 2 landuse-weight               water-weight)
  set landuse-weight               (replace-item 3 landuse-weight               crop-annual-weight)
  set landuse-weight               (replace-item 4 landuse-weight               crop-perennial-weight)
  set landuse-weight               (replace-item 5 landuse-weight               scrub-weight)
  set landuse-weight               (replace-item 6 landuse-weight               intensive-pasture-weight)
  set landuse-weight               (replace-item 7 landuse-weight               extensive-pasture-weight)
  set landuse-weight               (replace-item 8 landuse-weight               native-forest-weight)
  set landuse-weight               (replace-item 9 landuse-weight               exotic-forest-weight)
  ;; 
  set landuse-product-yield        (replace-item 1 landuse-product-yield        artificial-product-yield)
  set landuse-product-yield        (replace-item 2 landuse-product-yield        water-product-yield)
  set landuse-product-yield        (replace-item 3 landuse-product-yield        crop-annual-product-yield)
  set landuse-product-yield        (replace-item 4 landuse-product-yield        crop-perennial-product-yield)
  set landuse-product-yield        (replace-item 5 landuse-product-yield        scrub-product-yield)
  set landuse-product-yield        (replace-item 6 landuse-product-yield        intensive-pasture-product-yield)
  set landuse-product-yield        (replace-item 7 landuse-product-yield        extensive-pasture-product-yield)
  set landuse-product-yield        (replace-item 8 landuse-product-yield        native-forest-product-yield)
  set landuse-product-yield        (replace-item 9 landuse-product-yield        exotic-forest-product-yield)
  ;; 
  set landuse-product-value        (replace-item 1 landuse-product-value        artificial-product-value)
  set landuse-product-value        (replace-item 2 landuse-product-value        water-product-value)
  set landuse-product-value        (replace-item 3 landuse-product-value        crop-annual-product-value)
  set landuse-product-value        (replace-item 4 landuse-product-value        crop-perennial-product-value)
  set landuse-product-value        (replace-item 5 landuse-product-value        scrub-product-value)
  set landuse-product-value        (replace-item 6 landuse-product-value        intensive-pasture-product-value)
  set landuse-product-value        (replace-item 7 landuse-product-value        extensive-pasture-product-value)
  set landuse-product-value        (replace-item 8 landuse-product-value        native-forest-product-value)
  set landuse-product-value        (replace-item 9 landuse-product-value        exotic-forest-product-value)
  ;; 
  set landuse-emissions            (replace-item 1 landuse-emissions            artificial-emissions)
  set landuse-emissions            (replace-item 2 landuse-emissions            water-emissions)
  set landuse-emissions            (replace-item 3 landuse-emissions            crop-annual-emissions)
  set landuse-emissions            (replace-item 4 landuse-emissions            crop-perennial-emissions)
  set landuse-emissions            (replace-item 5 landuse-emissions            scrub-emissions)
  set landuse-emissions            (replace-item 6 landuse-emissions            intensive-pasture-emissions)
  set landuse-emissions            (replace-item 7 landuse-emissions            extensive-pasture-emissions)
  set landuse-emissions            (replace-item 8 landuse-emissions            native-forest-emissions)
  set landuse-emissions            (replace-item 9 landuse-emissions            exotic-forest-emissions)
  ;; 
  set landuse-carbon-stock-rate    (replace-item 1 landuse-carbon-stock-rate    artificial-carbon-stock-rate)
  set landuse-carbon-stock-rate    (replace-item 2 landuse-carbon-stock-rate    water-carbon-stock-rate)
  set landuse-carbon-stock-rate    (replace-item 3 landuse-carbon-stock-rate    crop-annual-carbon-stock-rate)
  set landuse-carbon-stock-rate    (replace-item 4 landuse-carbon-stock-rate    crop-perennial-carbon-stock-rate)
  set landuse-carbon-stock-rate    (replace-item 5 landuse-carbon-stock-rate    scrub-carbon-stock-rate)
  set landuse-carbon-stock-rate    (replace-item 6 landuse-carbon-stock-rate    intensive-pasture-carbon-stock-rate)
  set landuse-carbon-stock-rate    (replace-item 7 landuse-carbon-stock-rate    extensive-pasture-carbon-stock-rate)
  set landuse-carbon-stock-rate    (replace-item 8 landuse-carbon-stock-rate    native-forest-carbon-stock-rate)
  set landuse-carbon-stock-rate    (replace-item 9 landuse-carbon-stock-rate    exotic-forest-carbon-stock-rate)
  ;; 
  set landuse-carbon-stock-maximum (replace-item 1 landuse-carbon-stock-maximum artificial-carbon-stock-maximum)
  set landuse-carbon-stock-maximum (replace-item 2 landuse-carbon-stock-maximum water-carbon-stock-maximum)
  set landuse-carbon-stock-maximum (replace-item 3 landuse-carbon-stock-maximum crop-annual-carbon-stock-maximum)
  set landuse-carbon-stock-maximum (replace-item 4 landuse-carbon-stock-maximum crop-perennial-carbon-stock-maximum)
  set landuse-carbon-stock-maximum (replace-item 5 landuse-carbon-stock-maximum scrub-carbon-stock-maximum)
  set landuse-carbon-stock-maximum (replace-item 6 landuse-carbon-stock-maximum intensive-pasture-carbon-stock-maximum)
  set landuse-carbon-stock-maximum (replace-item 7 landuse-carbon-stock-maximum extensive-pasture-carbon-stock-maximum)
  set landuse-carbon-stock-maximum (replace-item 8 landuse-carbon-stock-maximum native-forest-carbon-stock-maximum)
  set landuse-carbon-stock-maximum (replace-item 9 landuse-carbon-stock-maximum exotic-forest-carbon-stock-maximum)
end
